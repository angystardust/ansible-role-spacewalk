---

- name: Check if firewalld service is running
  command: "/usr/bin/systemctl status firewalld"
  register: service_status_firewall
  failed_when: service_status_firewall.rc == 2
  changed_when: false

- name: Configure firewall services
  firewalld:
    service: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  with_items:
    - "{{ spacewalk_firewall.services }}"
  when: '"Active: active" in service_status_firewall.stdout'

- name: Configure firewall ports
  firewalld:
    port: "{{ item }}"
    immediate: true
    permanent: true
    state: enabled
  with_items:
    - "{{ spacewalk_firewall.ports }}"
  when: '"Active: active" in service_status_firewall.stdout'

- name: Add entry to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
    state: present

- name: Create a custom reposync_tomcat policy for SELinux (bugzilla #1522939)
  block:

    - name: Get the loaded SELinux modules
      command: semodule -l
      register: semodule
      changed_when: False
      tags: selinux
      check_mode: no

    - name: Copy the reposync_tomcat SELinux policy file
      copy:
        src: reposync_tomcat.te
        dest: /tmp/reposync_tomcat.te
      when: semodule.stdout.find('reposync_tomcat') == -1
      tags: selinux

    - name: Compile the SELinux module file
      command: checkmodule -M -m -o /tmp/reposync_tomcat.mod /tmp/reposync_tomcat.te
      when: semodule.stdout.find('reposync_tomcat') == -1
      tags: selinux

    - name: Build SELinux policy package
      command: semodule_package -o /tmp/reposync_tomcat.pp -m /tmp/reposync_tomcat.mod
      when: semodule.stdout.find('reposync_tomcat') == -1
      tags: selinux

    - name: Load the reposync_tomcat SELinux policy
      command: semodule -i /tmp/reposync_tomcat.pp
      when: semodule.stdout.find('reposync_tomcat') == -1
      tags: selinux

    - name: Remove SELinux policy temporary files
      file:
        path: /tmp/reposync_tomcat.*
        state: absent
      tags: selinux

  when: ansible_selinux and ansible_selinux.status == "enabled"
